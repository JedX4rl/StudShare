version: "3.9"

services:
  postgres:
    image: postgis/postgis:15-3.3
    platform: linux/amd64
    container_name: studshare_postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 15s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    platform: linux/arm64
    container_name: studshare_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6.0
    platform: linux/arm64
    container_name: studshare_mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    container_name: studshare_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  migrate:
    image: migrate/migrate
    container_name: studshare_migrate
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    entrypoint: [
      "migrate",
      "-path", "/migrations",
      "-database", "postgres://admin:admin@postgres:5432/postgres?sslmode=disable",
      "up"
    ]

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: studshare_app
    depends_on:
      migrate:
        condition: service_completed_successfully
    command: [ "go", "run", "./cmd/stud_share/main.go" ]
    environment:
      - DB_URL=postgres://admin:admin@postgres:5432/postgres?sslmode=disable
      - REDIS_URL=redis://studshare_redis:6379
      - MONGO_URL=mongodb://admin:admin@studshare_mongo:27017
      - MINIO_ENDPOINT=http://studshare_minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - .:/app
    working_dir: /app
    ports:
      - "8088:8088"

volumes:
  postgres_data:
  redis_data:
  mongo_data:
  minio_data: